
import java.util.Random;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.logging.Level;
import java.util.logging.Logger;


public class ProducerConsumer {
    Random random=new Random();
    BlockingQueue<Integer> que=new ArrayBlockingQueue<>(10);// en fazla 10 eleman alsýn que icine
    
    public void procedure(){
        while(true){
            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(ProducerConsumer.class.getName()).log(Level.SEVERE, null, ex);
            }
            /*
            procedure que ya en fazla 10 tane eleman alacak icerisine eger 10 tane elaman oduysa 
            beklemeye gecek taki consumer que iceride bekleyen elemanlari cekene kadar.
            */          
            try {
                Integer value=random.nextInt(1000);
                System.out.println("Procedure Uretiyor :"+value);
                
                que.put(value);
            } catch (InterruptedException ex) {
                Logger.getLogger(ProducerConsumer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void consumer(){
        while(true){
            try {
                Thread.sleep(3000);
            } catch (InterruptedException ex) {
                Logger.getLogger(ProducerConsumer.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Integer value=que.take();
                System.out.println("Consumer Tuketiyor : "+value);
                System.out.println("Queue Size : "+que.size());
                
            } catch (InterruptedException ex) {
                Logger.getLogger(ProducerConsumer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
}
